{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ines\\\\React\\\\jobbanglinainesFIN-main\\\\frontend\\\\src\\\\components\\\\Inscription\\\\Inscription.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Inscription.css\";\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la soumission\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inscription = () => {\n  _s();\n  const [nomCandidat, setNomCandidat] = useState('');\n  const [emailCandidat, setEmailCandidat] = useState('');\n  const [mot_de_passeCandidat, setMDPcandidat] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(nomCandidat, emailCandidat, mot_de_passeCandidat);\n    const candidat = {\n      nom_candidat: nomCandidat,\n      email_candidat: emailCandidat,\n      mot_de_passeCandidat: mot_de_passeCandidat\n    };\n    try {\n      const response = await fetch('/api/candidat/', {\n        method: 'POST',\n        body: JSON.stringify(candidat),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text(); // Récupère le texte de l'erreur\n        throw new Error(errorText); // Lève une erreur avec le message d'erreur\n      }\n      const json = await response.json();\n      setNomCandidat('');\n      setEmailCandidat('');\n      setMDPcandidat('');\n      setError(null);\n      console.log('compte entreprise Ajouter mon amour');\n      dispatch({\n        type: 'SIGNUPCANDIDAT',\n        payload: json\n      });\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Erreur lors de l'inscription:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inscription-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Inscription candidat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Nom du candidat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nomCandidat,\n            onChange: e => setNomCandidat(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: emailCandidat,\n            onChange: e => setEmailCandidat(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: mot_de_passeCandidat,\n            onChange: e => setMDPcandidat(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"S'inscrire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n_s(Inscription, \"uH9CStvlIQk9Osaac43iW8BOtOk=\");\n_c = Inscription;\nexport default Inscription;\n\n/*\n\nfunction Inscription() {\n  const [userType] = useState(\"candidat\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate(); // Pour rediriger vers la page candidat\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError(\"*Les mots de passe ne correspondent pas. Veuillez réessayer.\");\n      return;\n    }\n    setError(\"\");\n    console.log(`Registering as ${userType} with name: ${name}, email: ${email}`);\n    navigate('/cand'); // Rediriger après l'inscription réussie\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"inscription-container\">\n        <h2>Inscription</h2>\n        <p>Candidat</p>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <label>Nom</label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Mot de passe</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Confirmer le mot de passe</label>\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <button type=\"submit\" className=\"submit-btn\">S'inscrire</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Inscription;\n*/\nvar _c;\n$RefreshReg$(_c, \"Inscription\");","map":{"version":3,"names":["React","useState","NavBar","useNavigate","jsxDEV","_jsxDEV","Inscription","_s","nomCandidat","setNomCandidat","emailCandidat","setEmailCandidat","mot_de_passeCandidat","setMDPcandidat","error","setError","handleSubmit","e","preventDefault","console","log","candidat","nom_candidat","email_candidat","response","fetch","method","body","JSON","stringify","headers","ok","errorText","text","Error","json","dispatch","type","payload","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Ines/React/jobbanglinainesFIN-main/frontend/src/components/Inscription/Inscription.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Inscription.css\";\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la soumission\n\n\n\n\nconst Inscription = () => {\n  const [nomCandidat,setNomCandidat] = useState('')\n  const [emailCandidat, setEmailCandidat] = useState('')\n  const [mot_de_passeCandidat, setMDPcandidat] = useState('')\n\n\n  const[error, setError] = useState(null)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(nomCandidat, emailCandidat, mot_de_passeCandidat);\n  \n    const candidat = {\n      nom_candidat: nomCandidat,\n      email_candidat: emailCandidat,\n      mot_de_passeCandidat: mot_de_passeCandidat\n    };\n  \n    try {\n      const response = await fetch('/api/candidat/', {\n        method: 'POST',\n        body: JSON.stringify(candidat),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n  \n      if (!response.ok) {\n        const errorText = await response.text(); // Récupère le texte de l'erreur\n        throw new Error(errorText); // Lève une erreur avec le message d'erreur\n      }\n  \n      const json = await response.json();\n      setNomCandidat('');\n      setEmailCandidat('');\n      setMDPcandidat('');\n      setError(null);\n      console.log('compte entreprise Ajouter mon amour');\n      dispatch({ type: 'SIGNUPCANDIDAT', payload: json });\n    } catch (err) {\n      setError(err.message);\n      console.error(\"Erreur lors de l'inscription:\", err);\n    }\n  };\n\nreturn (\n  <div>\n    <NavBar />\n    <div className=\"inscription-container\">\n      <h2>Inscription candidat</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n          <label>Nom du candidat</label>\n          <input\n            type=\"text\"\n            value={nomCandidat}\n            onChange={(e) => setNomCandidat(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"input-group\">\n          <label>Email</label>\n          <input\n            type=\"email\"\n            value={emailCandidat}\n            onChange={(e) => setEmailCandidat(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"input-group\">\n          <label>Mot de passe</label>\n          <input\n            type=\"password\"\n            value={mot_de_passeCandidat}\n            onChange={(e) => setMDPcandidat(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-btn\">S'inscrire</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  </div>\n);\n};\n\nexport default Inscription;\n\n\n\n\n\n\n\n\n\n/*\n\nfunction Inscription() {\n  const [userType] = useState(\"candidat\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate(); // Pour rediriger vers la page candidat\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError(\"*Les mots de passe ne correspondent pas. Veuillez réessayer.\");\n      return;\n    }\n    setError(\"\");\n    console.log(`Registering as ${userType} with name: ${name}, email: ${email}`);\n    navigate('/cand'); // Rediriger après l'inscription réussie\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"inscription-container\">\n        <h2>Inscription</h2>\n        <p>Candidat</p>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <label>Nom</label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Mot de passe</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Confirmer le mot de passe</label>\n            <input\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <button type=\"submit\" className=\"submit-btn\">S'inscrire</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Inscription;\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}