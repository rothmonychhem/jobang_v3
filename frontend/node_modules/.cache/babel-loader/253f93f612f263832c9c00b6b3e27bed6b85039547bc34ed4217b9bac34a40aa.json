{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lina\\\\JobBangFINFOREAL\\\\jobbanglinainesFIN-master\\\\frontend\\\\src\\\\components\\\\ConnexionEnt\\\\ConnexionEnt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ConnexionEnt.css\";\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la connexion\n//import { EmployersList } from '../../data/employers'; //// Assurez-vous que le chemin est correct\n\n// Pour naviguer après la soumission\nimport { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnexionEnt = () => {\n  _s();\n  const {\n    dispatch\n  } = useEntrepriseContext();\n  const [emailEntreprise, setEmailEntreprise] = useState('');\n  const [mot_de_passeEntreprise, setMDPentreprise] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(emailEntreprise, mot_de_passeEntreprise);\n    const entreprise = {\n      emailEntreprise: emailEntreprise,\n      mot_de_passeEntreprise: mot_de_passeEntreprise\n    };\n    const response = await fetch('/api/entreprise/', {\n      method: 'POST',\n      body: JSON.stringify(entreprise),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      setEmailEntreprise('');\n      setMDPentreprise('');\n      setError(null);\n      console.log('compte entreprise connecter mon amour');\n      dispatch({\n        type: 'LOGINENTREPRISE',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connexion-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Employeur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: emailEntreprise,\n            onChange: e => setEmailEntreprise(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: mot_de_passeEntreprise,\n            onChange: e => setMDPentreprise(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pas de compte avec nous ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./inscent\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"signup-btn\",\n            children: \"Cr\\xE9er un compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnexionEnt, \"dUqcsmQL9uJyd67qXZManO3r1+Q=\", false, function () {\n  return [useEntrepriseContext];\n});\n_c = ConnexionEnt;\nexport default ConnexionEnt;\n\n/*\r\n\r\n\r\n\r\nfunction ConnexionEnt() {\r\n  const [userType] = useState(\"Employeur\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\r\n  const navigate = useNavigate(); // Pour rediriger après la connexion réussie\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Vérifiez si l'email est dans la liste des employeurs\r\n    const employer = EmployersList.find(emp => emp.email === email && emp.password === password);\r\n  \r\n    if (employer) {\r\n      console.log(`Logging in as ${userType} with email: ${email}`);\r\n      // Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\r\n      navigate('/ent', { state: { connectedEmployerEmail: email } }); // Passe l'email ici\r\n    } else {\r\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Employeur</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre mot de passe\"\r\n            />\r\n          </div>\r\n          <button className=\"login-btn\"type=\"submit\">Se connecter</button>\r\n   */ /*\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */\n/*\r\n   </form>\r\n    \r\n  <div className=\"signup\">\r\n    <p>Pas de compte avec nous ?</p>\r\n    <br />\r\n    <a href=\"./inscent\">\r\n      <button className=\"signup-btn\">Créer un compte</button>\r\n    </a>\r\n  </div>\r\n</div>\r\n</div>\r\n);\r\n}\r\nexport default ConnexionEnt;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ConnexionEnt\");","map":{"version":3,"names":["React","useState","NavBar","useNavigate","useEntrepriseContext","jsxDEV","_jsxDEV","ConnexionEnt","_s","dispatch","emailEntreprise","setEmailEntreprise","mot_de_passeEntreprise","setMDPentreprise","error","setError","handleSubmit","e","preventDefault","console","log","entreprise","response","fetch","method","body","JSON","stringify","headers","json","ok","type","payload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/Lina/JobBangFINFOREAL/jobbanglinainesFIN-master/frontend/src/components/ConnexionEnt/ConnexionEnt.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ConnexionEnt.css\";\r\nimport NavBar from '../NavBar/NavBar';\r\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la connexion\r\n//import { EmployersList } from '../../data/employers'; //// Assurez-vous que le chemin est correct\r\n\r\n // Pour naviguer après la soumission\r\nimport { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\r\n\r\n\r\nconst ConnexionEnt = () => {\r\n  const {dispatch} = useEntrepriseContext()\r\n  const [emailEntreprise, setEmailEntreprise]= useState('')\r\n  const [mot_de_passeEntreprise,setMDPentreprise]= useState('')\r\n\r\n  const[error, setError] = useState(null)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    console.log( emailEntreprise, mot_de_passeEntreprise)\r\n\r\n\r\nconst entreprise = {\r\n  emailEntreprise:emailEntreprise,\r\n  mot_de_passeEntreprise:mot_de_passeEntreprise\r\n\r\n}\r\n\r\nconst response = await fetch('/api/entreprise/', {\r\n  method:'POST',\r\n  body: JSON.stringify(entreprise),\r\n  headers:{\r\n      'Content-Type': 'application/json'\r\n  }\r\n})\r\nconst json = await response.json()\r\n\r\nif(!response.ok){\r\n      setError(json.error)\r\n}\r\nif(response.ok){\r\n  setEmailEntreprise('')\r\n  setMDPentreprise('')\r\n  setError(null)\r\n  console.log('compte entreprise connecter mon amour')\r\n  dispatch({type: 'LOGINENTREPRISE', payload:json})\r\n}\r\n\r\n}\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Employeur</p>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n         \r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={emailEntreprise}\r\n              onChange={(e) => setEmailEntreprise(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n      \r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={mot_de_passeEntreprise}\r\n              onChange={(e) => setMDPentreprise(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">Se connecter</button>\r\n        </form>\r\n\r\n        <div className=\"signup\">\r\n          <p>Pas de compte avec nous ?</p>\r\n          <br />\r\n          <a href=\"./inscent\">\r\n            <button className=\"signup-btn\">Créer un compte</button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ConnexionEnt;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n\r\nfunction ConnexionEnt() {\r\n  const [userType] = useState(\"Employeur\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\r\n  const navigate = useNavigate(); // Pour rediriger après la connexion réussie\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Vérifiez si l'email est dans la liste des employeurs\r\n    const employer = EmployersList.find(emp => emp.email === email && emp.password === password);\r\n  \r\n    if (employer) {\r\n      console.log(`Logging in as ${userType} with email: ${email}`);\r\n      // Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\r\n      navigate('/ent', { state: { connectedEmployerEmail: email } }); // Passe l'email ici\r\n    } else {\r\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Employeur</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre mot de passe\"\r\n            />\r\n          </div>\r\n          <button className=\"login-btn\"type=\"submit\">Se connecter</button>\r\n   *//*\r\n         {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */\r\n      /*\r\n         </form>\r\n\r\n        \r\n        <div className=\"signup\">\r\n          <p>Pas de compte avec nous ?</p>\r\n          <br />\r\n          <a href=\"./inscent\">\r\n            <button className=\"signup-btn\">Créer un compte</button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnexionEnt;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}