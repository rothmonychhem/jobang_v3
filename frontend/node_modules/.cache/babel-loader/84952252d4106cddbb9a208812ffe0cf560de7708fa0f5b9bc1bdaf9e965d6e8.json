{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lina\\\\JobBangFINFOREAL\\\\jobbanglinainesFIN-master\\\\frontend\\\\src\\\\components\\\\ConnexionEnt\\\\ConnexionEnt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ConnexionEnt.css\";\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la connexion\n//import { EmployersList } from '../../data/employers'; //// Assurez-vous que le chemin est correct\nimport { useConnexionEntreprise } from \"../../hooks/useConnexionEntreprise\";\n\n//import { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnexionEnt = () => {\n  _s();\n  // const {dispatch} = useEntrepriseContext()\n  const navigate = useNavigate();\n  const [emailEntreprise, setEmailEntreprise] = useState('');\n  const [mot_de_passeEntreprise, setMDPentreprise] = useState('');\n  const {\n    connexionEnt,\n    error,\n    isLoading\n  } = useConnexionEntreprise();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const success = await connexionEnt(emailEntreprise, mot_de_passeEntreprise);\n    console.log('Success:', success); // Vérifiez si 'success' est bien vrai\n\n    if (success) {\n      navigate('/ent'); // Redirige l'utilisateur??? jsp si cest la bonne route\n    } else {\n      console.log('Erreur de connexion');\n    }\n\n    /*\r\n    const entreprise = {\r\n      emailEntreprise:emailEntreprise,\r\n      mot_de_passeEntreprise:mot_de_passeEntreprise\r\n    \r\n    }\r\n    */\n    /*\r\n    const response = await fetch('/api/entreprise/', {\r\n      method:'POST',\r\n      body: JSON.stringify(entreprise),\r\n      headers:{\r\n          'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    \r\n    if(!response.ok){\r\n          setError(json.error)\r\n          \r\n    }\r\n    if(response.ok){\r\n      setEmailEntreprise('')\r\n      setMDPentreprise('')\r\n      setError(null)\r\n      console.log('compte entreprise connecter mon amour')\r\n      dispatch({type: 'LOGINENTREPRISE', payload:json})\r\n    }\r\n    */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connexion-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Employeur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: emailEntreprise,\n            onChange: e => setEmailEntreprise(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: mot_de_passeEntreprise,\n            onChange: e => setMDPentreprise(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pas de compte avec nous ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./inscent\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: isLoading,\n            className: \"signup-btn\",\n            children: \"Cr\\xE9er un compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnexionEnt, \"XgCWOkF4ULJHFLq24e0I0V95TbI=\", false, function () {\n  return [useNavigate, useConnexionEntreprise];\n});\n_c = ConnexionEnt;\nexport default ConnexionEnt;\n\n/*\r\n\r\n\r\n\r\nfunction ConnexionEnt() {\r\n  const [userType] = useState(\"Employeur\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\r\n  const navigate = useNavigate(); // Pour rediriger après la connexion réussie\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Vérifiez si l'email est dans la liste des employeurs\r\n    const employer = EmployersList.find(emp => emp.email === email && emp.password === password);\r\n  \r\n    if (employer) {\r\n      console.log(`Logging in as ${userType} with email: ${email}`);\r\n      // Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\r\n      navigate('/ent', { state: { connectedEmployerEmail: email } }); // Passe l'email ici\r\n    } else {\r\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Employeur</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre mot de passe\"\r\n            />\r\n          </div>\r\n          <button className=\"login-btn\"type=\"submit\">Se connecter</button>\r\n   */ /*\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */\n/*\r\n   </form>\r\n    \r\n  <div className=\"signup\">\r\n    <p>Pas de compte avec nous ?</p>\r\n    <br />\r\n    <a href=\"./inscent\">\r\n      <button className=\"signup-btn\">Créer un compte</button>\r\n    </a>\r\n  </div>\r\n</div>\r\n</div>\r\n);\r\n}\r\nexport default ConnexionEnt;\r\n***/\nvar _c;\n$RefreshReg$(_c, \"ConnexionEnt\");","map":{"version":3,"names":["React","useState","NavBar","useNavigate","useConnexionEntreprise","jsxDEV","_jsxDEV","ConnexionEnt","_s","navigate","emailEntreprise","setEmailEntreprise","mot_de_passeEntreprise","setMDPentreprise","connexionEnt","error","isLoading","handleSubmit","e","preventDefault","success","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","required","href","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lina/JobBangFINFOREAL/jobbanglinainesFIN-master/frontend/src/components/ConnexionEnt/ConnexionEnt.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ConnexionEnt.css\";\r\nimport NavBar from '../NavBar/NavBar';\r\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la connexion\r\n//import { EmployersList } from '../../data/employers'; //// Assurez-vous que le chemin est correct\r\nimport { useConnexionEntreprise } from \"../../hooks/useConnexionEntreprise\";\r\n\r\n//import { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\r\n\r\n\r\nconst ConnexionEnt = () => {\r\n // const {dispatch} = useEntrepriseContext()\r\n  const navigate = useNavigate();\r\n  const [emailEntreprise, setEmailEntreprise]= useState('')\r\n  const [mot_de_passeEntreprise,setMDPentreprise]= useState('')\r\n  const {connexionEnt, error, isLoading} = useConnexionEntreprise()\r\n\r\n \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const success = await connexionEnt(emailEntreprise, mot_de_passeEntreprise);    \r\n\r\n    console.log('Success:', success); // Vérifiez si 'success' est bien vrai\r\n\r\n    if (success) {\r\n      navigate('/ent'); // Redirige l'utilisateur??? jsp si cest la bonne route\r\n    } else {\r\n      console.log('Erreur de connexion');\r\n    \r\n    }\r\n\r\n/*\r\nconst entreprise = {\r\n  emailEntreprise:emailEntreprise,\r\n  mot_de_passeEntreprise:mot_de_passeEntreprise\r\n\r\n}\r\n*/\r\n/*\r\nconst response = await fetch('/api/entreprise/', {\r\n  method:'POST',\r\n  body: JSON.stringify(entreprise),\r\n  headers:{\r\n      'Content-Type': 'application/json'\r\n  }\r\n})\r\nconst json = await response.json()\r\n\r\nif(!response.ok){\r\n      setError(json.error)\r\n      \r\n}\r\nif(response.ok){\r\n  setEmailEntreprise('')\r\n  setMDPentreprise('')\r\n  setError(null)\r\n  console.log('compte entreprise connecter mon amour')\r\n  dispatch({type: 'LOGINENTREPRISE', payload:json})\r\n}\r\n*/\r\n}\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Employeur</p>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n         \r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={emailEntreprise}\r\n              onChange={(e) => setEmailEntreprise(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n      \r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={mot_de_passeEntreprise}\r\n              onChange={(e) => setMDPentreprise(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">Se connecter</button>\r\n        </form>\r\n\r\n        <div className=\"signup\">\r\n          <p>Pas de compte avec nous ?</p>\r\n          <br />\r\n          <a href=\"./inscent\">\r\n            <button disabled={isLoading} className=\"signup-btn\">Créer un compte</button>\r\n            {error && <div>{error}</div>}\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default ConnexionEnt;\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n\r\nfunction ConnexionEnt() {\r\n  const [userType] = useState(\"Employeur\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\r\n  const navigate = useNavigate(); // Pour rediriger après la connexion réussie\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Vérifiez si l'email est dans la liste des employeurs\r\n    const employer = EmployersList.find(emp => emp.email === email && emp.password === password);\r\n  \r\n    if (employer) {\r\n      console.log(`Logging in as ${userType} with email: ${email}`);\r\n      // Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\r\n      navigate('/ent', { state: { connectedEmployerEmail: email } }); // Passe l'email ici\r\n    } else {\r\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Employeur</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre mot de passe\"\r\n            />\r\n          </div>\r\n          <button className=\"login-btn\"type=\"submit\">Se connecter</button>\r\n   *//*\r\n         {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */\r\n      /*\r\n         </form>\r\n\r\n        \r\n        <div className=\"signup\">\r\n          <p>Pas de compte avec nous ?</p>\r\n          <br />\r\n          <a href=\"./inscent\">\r\n            <button className=\"signup-btn\">Créer un compte</button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnexionEnt;\r\n***/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}