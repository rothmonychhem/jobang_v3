{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lina\\\\JobBangFINFOREAL\\\\jobbanglinainesFIN-master\\\\frontend\\\\src\\\\components\\\\MesAnnonces\\\\MesAnnonces.jsx\",\n  _s = $RefreshSig$();\n// MesAnnonces.js\nimport React, { useEffect } from \"react\";\nimport EmploiDetails from \"./EmploiDetails\";\nimport \"./MesAnnonces.css\";\nimport NouvelleOffre from \"../NouvelleOffre/NouvelleOffre\";\nimport { useEmploiContext } from \"../../hooks/useEmploiContext\";\nimport { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MesAnnonces = ({\n  connectedEmployerEmail\n}) => {\n  _s();\n  const {\n    emplois,\n    dispatch\n  } = useEmploiContext();\n  const {\n    entreprise\n  } = useEntrepriseContext();\n\n  // Filtre la liste des emplois pour ne garder que ceux de l'employeur connecté\n  const filteredEmploiList = emplois ? emplois.filter(emploi => emploi.email_employeur === connectedEmployerEmail) : [];\n\n  // Ajoute un log pour voir les emplois filtrés\n  console.log('emplois filtrés:', filteredEmploiList);\n\n  // Fetch tous les emplois et supprimer/modifier potentiellement\n  useEffect(() => {\n    const fetchEmploi = async () => {\n      const response = await fetch('/api/offreEmploi', {\n        headers: {\n          'Authorization': `Bearer ${entreprise.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_EMPLOIS',\n          payload: json\n        });\n      }\n    };\n    if (entreprise) {\n      fetchEmploi();\n    }\n  }, [dispatch, entreprise]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lmj-emploi-list\",\n      children: filteredEmploiList.length > 0 ? filteredEmploiList.map(emploi => /*#__PURE__*/_jsxDEV(EmploiDetails, {\n        emploi: emploi\n      }, emploi._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Aucune annonce trouv\\xE9e pour cet employeur.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) // Message si aucun emploi n'est trouvé\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NouvelleOffre, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MesAnnonces, \"QPf1WPUyrpHxyz1NGPIQzTfz8WA=\", false, function () {\n  return [useEmploiContext, useEntrepriseContext];\n});\n_c = MesAnnonces;\nexport default MesAnnonces;\nvar _c;\n$RefreshReg$(_c, \"MesAnnonces\");","map":{"version":3,"names":["React","useEffect","EmploiDetails","NouvelleOffre","useEmploiContext","useEntrepriseContext","jsxDEV","_jsxDEV","MesAnnonces","connectedEmployerEmail","_s","emplois","dispatch","entreprise","filteredEmploiList","filter","emploi","email_employeur","console","log","fetchEmploi","response","fetch","headers","token","json","ok","type","payload","children","className","length","map","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lina/JobBangFINFOREAL/jobbanglinainesFIN-master/frontend/src/components/MesAnnonces/MesAnnonces.jsx"],"sourcesContent":["// MesAnnonces.js\r\nimport React, { useEffect } from \"react\";\r\nimport EmploiDetails from \"./EmploiDetails\";\r\nimport \"./MesAnnonces.css\";\r\nimport NouvelleOffre from \"../NouvelleOffre/NouvelleOffre\";\r\nimport { useEmploiContext } from \"../../hooks/useEmploiContext\";\r\nimport { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\r\n\r\nconst MesAnnonces = ({ connectedEmployerEmail }) => {\r\n  const { emplois, dispatch } = useEmploiContext();\r\n  const { entreprise } = useEntrepriseContext();\r\n\r\n  // Filtre la liste des emplois pour ne garder que ceux de l'employeur connecté\r\n  const filteredEmploiList = emplois ? emplois.filter(\r\n    (emploi) => emploi.email_employeur === connectedEmployerEmail\r\n  ) : [];\r\n\r\n  // Ajoute un log pour voir les emplois filtrés\r\n  console.log('emplois filtrés:', filteredEmploiList);\r\n\r\n  // Fetch tous les emplois et supprimer/modifier potentiellement\r\n  useEffect(() => {\r\n    const fetchEmploi = async () => {\r\n      const response = await fetch('/api/offreEmploi', {\r\n        headers: {\r\n          'Authorization': `Bearer ${entreprise.token}`\r\n        }\r\n      });\r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        dispatch({ type: 'SET_EMPLOIS', payload: json });\r\n      }\r\n    };\r\n\r\n    if (entreprise) {\r\n      fetchEmploi();\r\n    }\r\n  }, [dispatch, entreprise]);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n        {filteredEmploiList.length > 0 ? (\r\n          filteredEmploiList.map((emploi) => (\r\n            <EmploiDetails key={emploi._id} emploi={emploi} />\r\n          ))\r\n        ) : (\r\n          <li>Aucune annonce trouvée pour cet employeur.</li> // Message si aucun emploi n'est trouvé\r\n        )}\r\n      </ul>\r\n      <NouvelleOffre />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MesAnnonces;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,mBAAmB;AAC1B,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,oBAAoB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGR,gBAAgB,CAAC,CAAC;EAChD,MAAM;IAAES;EAAW,CAAC,GAAGR,oBAAoB,CAAC,CAAC;;EAE7C;EACA,MAAMS,kBAAkB,GAAGH,OAAO,GAAGA,OAAO,CAACI,MAAM,CAChDC,MAAM,IAAKA,MAAM,CAACC,eAAe,KAAKR,sBACzC,CAAC,GAAG,EAAE;;EAEN;EACAS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,kBAAkB,CAAC;;EAEnD;EACAb,SAAS,CAAC,MAAM;IACd,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC/CC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUV,UAAU,CAACW,KAAK;QAC7C;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACfd,QAAQ,CAAC;UAAEe,IAAI,EAAE,aAAa;UAAEC,OAAO,EAAEH;QAAK,CAAC,CAAC;MAClD;IACF,CAAC;IAED,IAAIZ,UAAU,EAAE;MACdO,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACR,QAAQ,EAAEC,UAAU,CAAC,CAAC;EAE1B,oBACEN,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAIuB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC5Bf,kBAAkB,CAACiB,MAAM,GAAG,CAAC,GAC5BjB,kBAAkB,CAACkB,GAAG,CAAEhB,MAAM,iBAC5BT,OAAA,CAACL,aAAa;QAAkBc,MAAM,EAAEA;MAAO,GAA3BA,MAAM,CAACiB,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAClD,CAAC,gBAEF9B,OAAA;QAAAsB,QAAA,EAAI;MAA0C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAC;IACrD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACL9B,OAAA,CAACJ,aAAa;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA9CIF,WAAW;EAAA,QACeJ,gBAAgB,EACvBC,oBAAoB;AAAA;AAAAiC,EAAA,GAFvC9B,WAAW;AAgDjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}