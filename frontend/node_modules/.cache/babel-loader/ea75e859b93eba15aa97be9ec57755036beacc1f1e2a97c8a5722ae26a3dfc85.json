{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ines\\\\React\\\\jobbanglinainesFIN-main\\\\frontend\\\\src\\\\components\\\\MesAnnonces\\\\MesAnnonces.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { EmploiList } from \"../../data/emploi\";\nimport \"./MesAnnonces.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MesAnnonces = ({\n  connectedEmployerEmail\n}) => {\n  _s();\n  const [emplois, setEmplois] = useState(EmploiList);\n  const handleDelete = emploiToDelete => {\n    setEmplois(emplois.filter(emploi => emploi !== emploiToDelete));\n  };\n\n  // Filtrer les emplois selon l'employeur connecté\n  const filteredEmploiList = emplois.filter(emploi => emploi.email_employeur === connectedEmployerEmail);\n\n  // Ajoute un log pour voir les emplois filtrés\n  console.log('emplois filtrés:', filteredEmploiList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lmj-emploi-list\",\n      children: filteredEmploiList.length > 0 ? filteredEmploiList.map(emploi => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emploi-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"jobTitle\",\n          children: emploi.nom_poste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobEntreprise\",\n          children: emploi.nom_entreprise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobSector\",\n          children: emploi.categorie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobSalary\",\n          children: emploi.salaire\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobLocation\",\n          children: emploi.emplacement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonx\",\n            onClick: () => handleDelete(emploi),\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, emploi.nom_poste, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Aucune offre d'emploi disponible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MesAnnonces, \"3ZZqcYXzH21pq9yAbLWJNgZ8UOs=\");\n_c = MesAnnonces;\nexport default MesAnnonces;\nvar _c;\n$RefreshReg$(_c, \"MesAnnonces\");","map":{"version":3,"names":["React","useState","EmploiList","jsxDEV","_jsxDEV","MesAnnonces","connectedEmployerEmail","_s","emplois","setEmplois","handleDelete","emploiToDelete","filter","emploi","filteredEmploiList","email_employeur","console","log","children","className","length","map","nom_poste","fileName","_jsxFileName","lineNumber","columnNumber","nom_entreprise","categorie","salaire","emplacement","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ines/React/jobbanglinainesFIN-main/frontend/src/components/MesAnnonces/MesAnnonces.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { EmploiList } from \"../../data/emploi\";\nimport \"./MesAnnonces.css\";\n\nconst MesAnnonces = ({ connectedEmployerEmail }) => {\n  const [emplois, setEmplois] = useState(EmploiList);\n\n  const handleDelete = (emploiToDelete) => {\n    setEmplois(emplois.filter((emploi) => emploi !== emploiToDelete));\n  };\n\n  // Filtrer les emplois selon l'employeur connecté\n  const filteredEmploiList = emplois.filter(\n    (emploi) => emploi.email_employeur === connectedEmployerEmail\n  );\n\n  // Ajoute un log pour voir les emplois filtrés\n  console.log('emplois filtrés:', filteredEmploiList);\n\n  return (\n    <div>\n      <ul className=\"lmj-emploi-list\">\n        {filteredEmploiList.length > 0 ? (\n          filteredEmploiList.map((emploi) => (\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\n              <h3 className=\"jobTitle\">{emploi.nom_poste}</h3>\n              <span className=\"jobEntreprise\">{emploi.nom_entreprise}</span>\n              <span className=\"jobSector\">{emploi.categorie}</span>\n              <span className=\"jobSalary\">{emploi.salaire}</span>\n              <span className=\"jobLocation\">{emploi.emplacement}</span>\n              <div className=\"button-container\">\n                <button\n                  className=\"buttonx\"\n                  onClick={() => handleDelete(emploi)}\n                >\n                  Supprimer\n                </button>\n              </div>\n            </div>\n          ))\n        ) : (\n          <li>Aucune offre d'emploi disponible.</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default MesAnnonces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}