{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lina\\\\JobBangFINFOREAL\\\\jobbanglinainesFIN-master\\\\frontend\\\\src\\\\components\\\\Connexion\\\\Connexion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Importer useNavigate\nimport \"./Connexion.css\";\nimport NavBar from '../NavBar/NavBar';\n//import { CandidatsList } from '../../data/candidats'; // Importer la liste des candidats\nimport { useCandidatContext } from \"../../hooks/useCandidatContext\";\n\n// Pour naviguer après la soumission\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Connexion = () => {\n  _s();\n  const {\n    dispatch\n  } = useCandidatContext();\n  const [emailCandidat, setEmailCandidat] = useState('');\n  const [mot_de_passeCandidat, setMDPcandidat] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(emailCandidat, mot_de_passeCandidat);\n    const candidat = {\n      email_candidat: emailCandidat,\n      mot_de_passeCandidat: mot_de_passeCandidat\n    };\n    const response = await fetch('/api/candidat/', {\n      method: 'POST',\n      body: JSON.stringify(candidat),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      setEmailCandidat('');\n      setMDPcandidat('');\n      setError(null);\n      console.log('compte entreprise Ajouter mon amour');\n      dispatch({\n        type: 'LOGINCANDIDAT',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connexion-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion candidat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: emailCandidat,\n            onChange: e => setEmailCandidat(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: mot_de_passeCandidat,\n            onChange: e => setMDPcandidat(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pas de compte avec nous ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./ins\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"signup-btn\",\n            children: \"Cr\\xE9er un compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n_s(Connexion, \"l7UOpGJWDosAsmmlswgEE0N/hhM=\", false, function () {\n  return [useCandidatContext];\n});\n_c = Connexion;\nexport default Connexion;\n\n/*\r\n\r\nfunction Inscription() {\r\n  const [userType] = useState(\"candidat\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate(); // Pour rediriger vers la page candidat\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setError(\"*Les mots de passe ne correspondent pas. Veuillez réessayer.\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    console.log(`Registering as ${userType} with name: ${name}, email: ${email}`);\r\n    navigate('/cand'); // Rediriger après l'inscription réussie\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"inscription-container\">\r\n        <h2>Inscription</h2>\r\n        <p>Candidat</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Nom</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Confirmer le mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">S'inscrire</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inscription;\r\n*/\n\n/*\r\nfunction Connexion() {\r\n  const [userType] = useState(\"candidat\"); // Default to \"candidat\"\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\r\n  const navigate = useNavigate();  // Utiliser useNavigate pour rediriger\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Vérifiez si l'email et le mot de passe sont corrects\r\n    const candidat = CandidatsList.find(c => c.email === email && c.mot_de_passe === password);\r\n    \r\n    if (candidat) {\r\n      console.log(`Logging in as ${userType} with email: ${email}`);\r\n      // Rediriger vers la page candidat après connexion réussie\r\n      navigate(\"/cand\");\r\n    } else {\r\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Candidat</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre mot de passe\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-btn\">Se connecter</button>\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */ /*}*/ /*\r\n                                                                                                                          </form>\r\n                                                                                                                          <div className=\"signup\">\r\n                                                                                                                          <p>Pas de compte avec nous ?</p>\r\n                                                                                                                          <br />\r\n                                                                                                                          <a href=\"./ins\">\r\n                                                                                                                          <button className=\"signup-btn\">Créer un compte</button>\r\n                                                                                                                          </a> \r\n                                                                                                                          </div>\r\n                                                                                                                          </div>\r\n                                                                                                                          </div>\r\n                                                                                                                          );\r\n                                                                                                                          }\r\n                                                                                                                          export default Connexion;\r\n                                                                                                                          */\nvar _c;\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","useCandidatContext","jsxDEV","_jsxDEV","Connexion","_s","dispatch","emailCandidat","setEmailCandidat","mot_de_passeCandidat","setMDPcandidat","error","setError","handleSubmit","e","preventDefault","console","log","candidat","email_candidat","response","fetch","method","body","JSON","stringify","headers","json","ok","type","payload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/Lina/JobBangFINFOREAL/jobbanglinainesFIN-master/frontend/src/components/Connexion/Connexion.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";  // Importer useNavigate\r\nimport \"./Connexion.css\";\r\nimport NavBar from '../NavBar/NavBar';\r\n//import { CandidatsList } from '../../data/candidats'; // Importer la liste des candidats\r\nimport { useCandidatContext } from \"../../hooks/useCandidatContext\";\r\n\r\n// Pour naviguer après la soumission\r\n\r\n\r\n\r\n\r\nconst Connexion = () => {\r\n  const {dispatch} = useCandidatContext()\r\n  const [emailCandidat, setEmailCandidat] = useState('')\r\n  const [mot_de_passeCandidat, setMDPcandidat] = useState('')\r\n\r\n\r\n  const[error, setError] = useState(null)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    console.log( emailCandidat, mot_de_passeCandidat)\r\n\r\nconst candidat = {\r\n  email_candidat:emailCandidat,\r\n  mot_de_passeCandidat:mot_de_passeCandidat\r\n\r\n}\r\n\r\nconst response = await fetch('/api/candidat/', {\r\n  method:'POST',\r\n  body: JSON.stringify(candidat),\r\n  headers:{\r\n      'Content-Type': 'application/json'\r\n  }\r\n})\r\nconst json = await response.json()\r\n\r\nif(!response.ok){\r\n      setError(json.error)\r\n}\r\nif(response.ok){\r\n\r\n  setEmailCandidat('')\r\n  setMDPcandidat('')\r\n  setError(null)\r\n  console.log('compte entreprise Ajouter mon amour')\r\n  dispatch({type: 'LOGINCANDIDAT', payload:json})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nreturn (\r\n  <div>\r\n    <NavBar />\r\n    <div className=\"connexion-container\">\r\n      <h2>Connexion candidat</h2>\r\n      <form onSubmit={handleSubmit}>\r\n  \r\n        <div className=\"input-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={emailCandidat}\r\n            onChange={(e) => setEmailCandidat(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Mot de passe</label>\r\n          <input\r\n            type=\"password\"\r\n            value={mot_de_passeCandidat}\r\n            onChange={(e) => setMDPcandidat(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-btn\">Se connecter</button>\r\n      </form>\r\n\r\n      <div className=\"signup\">\r\n          <p>Pas de compte avec nous ?</p>\r\n          <br />\r\n          <a href=\"./ins\">\r\n            <button className=\"signup-btn\">Créer un compte</button>\r\n          </a> \r\n        </div>\r\n        \r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default Connexion;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nfunction Inscription() {\r\n  const [userType] = useState(\"candidat\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate(); // Pour rediriger vers la page candidat\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setError(\"*Les mots de passe ne correspondent pas. Veuillez réessayer.\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    console.log(`Registering as ${userType} with name: ${name}, email: ${email}`);\r\n    navigate('/cand'); // Rediriger après l'inscription réussie\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"inscription-container\">\r\n        <h2>Inscription</h2>\r\n        <p>Candidat</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Nom</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Confirmer le mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">S'inscrire</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inscription;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nfunction Connexion() {\r\n  const [userType] = useState(\"candidat\"); // Default to \"candidat\"\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\r\n  const navigate = useNavigate();  // Utiliser useNavigate pour rediriger\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Vérifiez si l'email et le mot de passe sont corrects\r\n    const candidat = CandidatsList.find(c => c.email === email && c.mot_de_passe === password);\r\n    \r\n    if (candidat) {\r\n      console.log(`Logging in as ${userType} with email: ${email}`);\r\n      // Rediriger vers la page candidat après connexion réussie\r\n      navigate(\"/cand\");\r\n    } else {\r\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Candidat</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre mot de passe\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-btn\">Se connecter</button>\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur *//*}*//*\r\n        </form>\r\n       \r\n        <div className=\"signup\">\r\n          <p>Pas de compte avec nous ?</p>\r\n          <br />\r\n          <a href=\"./ins\">\r\n            <button className=\"signup-btn\">Créer un compte</button>\r\n          </a> \r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Connexion;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}