{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rothm\\\\source\\\\repos\\\\JOBBANGROTHMONYFINI\\\\frontend\\\\src\\\\components\\\\EmploiItem\\\\EmploiItem.jsx\",\n  _s = $RefreshSig$();\n/**import React, { useState } from \"react\";\r\nimport { EmploiList } from \"../../data/emploi\";\r\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\r\nimport \"./EmploiItem.css\";\r\n\r\nconst EmploiItem = ({ searchTerm, location, likedJobs, setLikedJobs }) => {\r\n  const [showEmail, setShowEmail] = useState(false);\r\n  const [selectedEmploi, setSelectedEmploi] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const toggleEmail = (emploi) => {\r\n    if (selectedEmploi === emploi) {\r\n      setShowEmail(!showEmail);\r\n    } else {\r\n      setSelectedEmploi(emploi);\r\n      setShowEmail(true);\r\n    }\r\n  };\r\n\r\n  const toggleDetails = (emploi) => {\r\n    if (selectedEmploi === emploi) {\r\n      setShowDetails(!showDetails);\r\n    } else {\r\n      setSelectedEmploi(emploi);\r\n      setShowDetails(true);\r\n    }\r\n  };\r\n\r\n  const filterEmplois = (emplois) => {\r\n    const lowerSearchTerm = searchTerm.toLowerCase();\r\n    const lowerLocation = location.toLowerCase();\r\n\r\n\r\n    console.log(EmploiList);\r\n    return emplois.filter(\r\n      (emploi) =>\r\n        emploi.visibility &&\r\n        (emploi.nom_poste.toLowerCase().includes(lowerSearchTerm) ||\r\n          emploi.nom_entreprise.toLowerCase().includes(lowerSearchTerm) ||\r\n          emploi.categorie.toLowerCase().includes(lowerSearchTerm) ||\r\n          (emploi.description &&\r\n            emploi.description.toLowerCase().includes(lowerSearchTerm))) &&\r\n        (location === \"\" ||\r\n          emploi.emplacement.toLowerCase().includes(lowerLocation))\r\n    );\r\n  };\r\n\r\n  const groupedEmplois = filterEmplois(EmploiList);\r\n  console.log(groupedEmplois);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n        {groupedEmplois.length > 0 ? (\r\n          groupedEmplois.map((emploi) => (\r\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n              <div\r\n                className=\"like-icon\"\r\n                onClick={() => {\r\n                  const newLikes = new Set(likedJobs);\r\n                  if (newLikes.has(emploi.nom_poste)) {\r\n                    newLikes.delete(emploi.nom_poste);\r\n                  } else {\r\n                    newLikes.add(emploi.nom_poste);\r\n                  }\r\n                  setLikedJobs(newLikes);\r\n                }}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {likedJobs.has(emploi.nom_poste) ? (\r\n                  <FaHeart color=\"black\" />\r\n                ) : (\r\n                  <FaRegHeart color=\"black\" />\r\n                )}\r\n              </div>\r\n              <h3\r\n                className=\"jobTitle\"\r\n                onClick={() => toggleDetails(emploi)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {emploi.nom_poste}\r\n              </h3>\r\n              <span className=\"jobEntreprise\">\r\n                <span className=\"label\">Entreprise:</span>{\" \"}\r\n                {emploi.nom_entreprise}\r\n              </span>\r\n              <span className=\"jobSector\">\r\n                <span className=\"label\">Secteur:</span> {emploi.categorie}\r\n              </span>\r\n              <span className=\"jobSalary\">\r\n                <span className=\"label\">Salaire:</span> {emploi.salaire}\r\n              </span>\r\n              <span className=\"jobLocation\">\r\n                <span className=\"label\">Emplacement:</span> {emploi.emplacement}\r\n              </span>\r\n              <button className=\"buttonP\" onClick={() => toggleEmail(emploi)}>\r\n                Postuler\r\n              </button>\r\n\r\n              \r\n              {showEmail && selectedEmploi === emploi && (\r\n                <div className=\"popup\">\r\n                  <div className=\"popup-content\">\r\n                    <span className=\"close\" onClick={() => setShowEmail(false)}>\r\n                      &times;\r\n                    </span>\r\n                    <h4>\r\n                      Email:{\" \"}\r\n                      <a href={`mailto:${emploi.email_employeur}`}>\r\n                        {emploi.email_employeur}\r\n                      </a>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {showDetails && selectedEmploi === emploi && (\r\n                <div className=\"details-popup\">\r\n                  <div className=\"details-popup-content\">\r\n                    <span\r\n                      className=\"close\"\r\n                      onClick={() => setShowDetails(false)}\r\n                    >\r\n                      &times;\r\n                    </span>\r\n                    <div className=\"details-content\">\r\n                      <h4>Description:</h4>\r\n                      <p>{emploi.description}</p>\r\n                      <h4>Responsabilités:</h4>\r\n                      <p>{emploi.responsabilites}</p>\r\n                      <h4>Exigences:</h4>\r\n                      <p>{emploi.exigences}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <li>Aucune offre d'emploi trouvée.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmploiItem;\r\n*/\nimport React, { useState, useEffect } from \"react\";\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\nimport \"./EmploiItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmploiItem = ({\n  searchTerm,\n  location,\n  likedJobs,\n  setLikedJobs,\n  entrepriseToken\n}) => {\n  _s();\n  const [showEmail, setShowEmail] = useState(false);\n  const [selectedEmploi, setSelectedEmploi] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  const [emplois, setEmplois] = useState([]); // State to store the fetched emplois\n  const [loading, setLoading] = useState(true); // To show loading state while fetching\n\n  // Toggle email visibility\n  const toggleEmail = emploi => {\n    if (selectedEmploi === emploi) {\n      setShowEmail(!showEmail);\n    } else {\n      setSelectedEmploi(emploi);\n      setShowEmail(true);\n    }\n  };\n\n  // Toggle details visibility\n  const toggleDetails = emploi => {\n    if (selectedEmploi === emploi) {\n      setShowDetails(!showDetails);\n    } else {\n      setSelectedEmploi(emploi);\n      setShowDetails(true);\n    }\n  };\n\n  // Fetch the emplois data from the server\n  const fetchEmplois = async () => {\n    if (!entrepriseToken) {\n      console.error(\"No token provided!\");\n      return;\n    }\n    try {\n      const response = await fetch('/api/offreEmploi', {\n        headers: {\n          'Authorization': `Bearer ${entrepriseToken}` // Make sure the token is included in the request\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        setEmplois(json); // Set the fetched emplois data\n      } else {\n        console.error(\"Failed to fetch emplois:\", json);\n      }\n    } catch (error) {\n      console.error(\"Error fetching emplois:\", error);\n    } finally {\n      setLoading(false); // Stop the loading state after fetching\n    }\n  };\n\n  // Filter emplois based on search term and location\n  const filterEmplois = emplois => {\n    const lowerSearchTerm = searchTerm.toLowerCase();\n    const lowerLocation = location.toLowerCase();\n    return emplois.filter(emploi => emploi.visibility && (emploi.nom_poste.toLowerCase().includes(lowerSearchTerm) || emploi.nom_entreprise.toLowerCase().includes(lowerSearchTerm) || emploi.categorie.toLowerCase().includes(lowerSearchTerm) || emploi.description && emploi.description.toLowerCase().includes(lowerSearchTerm)) && (location === \"\" || emploi.emplacement.toLowerCase().includes(lowerLocation)));\n  };\n\n  // Trigger fetch when the component mounts\n  useEffect(() => {\n    fetchEmplois();\n  }, [entrepriseToken]); // Dependency on entrepriseToken so it refetches when token changes\n\n  const groupedEmplois = filterEmplois(emplois);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) // Loading state\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lmj-emploi-list\",\n      children: groupedEmplois.length > 0 ? groupedEmplois.map(emploi => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emploi-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"like-icon\",\n          onClick: () => {\n            const newLikes = new Set(likedJobs);\n            if (newLikes.has(emploi.nom_poste)) {\n              newLikes.delete(emploi.nom_poste);\n            } else {\n              newLikes.add(emploi.nom_poste);\n            }\n            setLikedJobs(newLikes);\n          },\n          style: {\n            cursor: \"pointer\"\n          },\n          children: likedJobs.has(emploi.nom_poste) ? /*#__PURE__*/_jsxDEV(FaHeart, {\n            color: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {\n            color: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"jobTitle\",\n          onClick: () => toggleDetails(emploi),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: emploi.nom_poste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobEntreprise\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Entreprise:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }, this), \" \", emploi.nom_entreprise]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobSector\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Secteur:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, this), \" \", emploi.categorie]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobSalary\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Salaire:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 19\n          }, this), \" \", emploi.salaire]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"jobLocation\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label\",\n            children: \"Emplacement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this), \" \", emploi.emplacement]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonP\",\n          onClick: () => toggleEmail(emploi),\n          children: \"Postuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this), showEmail && selectedEmploi === emploi && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => setShowEmail(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Email:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${emploi.email_employeur}`,\n                children: emploi.email_employeur\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 19\n        }, this), showDetails && selectedEmploi === emploi && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details-popup-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => setShowDetails(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: emploi.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Responsabilit\\xE9s:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: emploi.responsabilites\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Exigences:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: emploi.exigences\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 19\n        }, this)]\n      }, emploi.nom_poste, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Aucune offre d'emploi trouv\\xE9e.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(EmploiItem, \"Pw7Mo2GEs5aq0QZ3jYg8RS3IY7g=\");\n_c = EmploiItem;\nexport default EmploiItem;\nvar _c;\n$RefreshReg$(_c, \"EmploiItem\");","map":{"version":3,"names":["React","useState","useEffect","FaHeart","FaRegHeart","jsxDEV","_jsxDEV","EmploiItem","searchTerm","location","likedJobs","setLikedJobs","entrepriseToken","_s","showEmail","setShowEmail","selectedEmploi","setSelectedEmploi","showDetails","setShowDetails","emplois","setEmplois","loading","setLoading","toggleEmail","emploi","toggleDetails","fetchEmplois","console","error","response","fetch","headers","json","ok","filterEmplois","lowerSearchTerm","toLowerCase","lowerLocation","filter","visibility","nom_poste","includes","nom_entreprise","categorie","description","emplacement","groupedEmplois","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","onClick","newLikes","Set","has","delete","add","style","cursor","color","salaire","href","email_employeur","responsabilites","exigences","_c","$RefreshReg$"],"sources":["C:/Users/rothm/source/repos/JOBBANGROTHMONYFINI/frontend/src/components/EmploiItem/EmploiItem.jsx"],"sourcesContent":["/**import React, { useState } from \"react\";\r\nimport { EmploiList } from \"../../data/emploi\";\r\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\r\nimport \"./EmploiItem.css\";\r\n\r\nconst EmploiItem = ({ searchTerm, location, likedJobs, setLikedJobs }) => {\r\n  const [showEmail, setShowEmail] = useState(false);\r\n  const [selectedEmploi, setSelectedEmploi] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  const toggleEmail = (emploi) => {\r\n    if (selectedEmploi === emploi) {\r\n      setShowEmail(!showEmail);\r\n    } else {\r\n      setSelectedEmploi(emploi);\r\n      setShowEmail(true);\r\n    }\r\n  };\r\n\r\n  const toggleDetails = (emploi) => {\r\n    if (selectedEmploi === emploi) {\r\n      setShowDetails(!showDetails);\r\n    } else {\r\n      setSelectedEmploi(emploi);\r\n      setShowDetails(true);\r\n    }\r\n  };\r\n\r\n  const filterEmplois = (emplois) => {\r\n    const lowerSearchTerm = searchTerm.toLowerCase();\r\n    const lowerLocation = location.toLowerCase();\r\n\r\n\r\n    console.log(EmploiList);\r\n    return emplois.filter(\r\n      (emploi) =>\r\n        emploi.visibility &&\r\n        (emploi.nom_poste.toLowerCase().includes(lowerSearchTerm) ||\r\n          emploi.nom_entreprise.toLowerCase().includes(lowerSearchTerm) ||\r\n          emploi.categorie.toLowerCase().includes(lowerSearchTerm) ||\r\n          (emploi.description &&\r\n            emploi.description.toLowerCase().includes(lowerSearchTerm))) &&\r\n        (location === \"\" ||\r\n          emploi.emplacement.toLowerCase().includes(lowerLocation))\r\n    );\r\n  };\r\n\r\n  const groupedEmplois = filterEmplois(EmploiList);\r\n  console.log(groupedEmplois);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n        {groupedEmplois.length > 0 ? (\r\n          groupedEmplois.map((emploi) => (\r\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n              <div\r\n                className=\"like-icon\"\r\n                onClick={() => {\r\n                  const newLikes = new Set(likedJobs);\r\n                  if (newLikes.has(emploi.nom_poste)) {\r\n                    newLikes.delete(emploi.nom_poste);\r\n                  } else {\r\n                    newLikes.add(emploi.nom_poste);\r\n                  }\r\n                  setLikedJobs(newLikes);\r\n                }}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {likedJobs.has(emploi.nom_poste) ? (\r\n                  <FaHeart color=\"black\" />\r\n                ) : (\r\n                  <FaRegHeart color=\"black\" />\r\n                )}\r\n              </div>\r\n              <h3\r\n                className=\"jobTitle\"\r\n                onClick={() => toggleDetails(emploi)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {emploi.nom_poste}\r\n              </h3>\r\n              <span className=\"jobEntreprise\">\r\n                <span className=\"label\">Entreprise:</span>{\" \"}\r\n                {emploi.nom_entreprise}\r\n              </span>\r\n              <span className=\"jobSector\">\r\n                <span className=\"label\">Secteur:</span> {emploi.categorie}\r\n              </span>\r\n              <span className=\"jobSalary\">\r\n                <span className=\"label\">Salaire:</span> {emploi.salaire}\r\n              </span>\r\n              <span className=\"jobLocation\">\r\n                <span className=\"label\">Emplacement:</span> {emploi.emplacement}\r\n              </span>\r\n              <button className=\"buttonP\" onClick={() => toggleEmail(emploi)}>\r\n                Postuler\r\n              </button>\r\n\r\n              \r\n              {showEmail && selectedEmploi === emploi && (\r\n                <div className=\"popup\">\r\n                  <div className=\"popup-content\">\r\n                    <span className=\"close\" onClick={() => setShowEmail(false)}>\r\n                      &times;\r\n                    </span>\r\n                    <h4>\r\n                      Email:{\" \"}\r\n                      <a href={`mailto:${emploi.email_employeur}`}>\r\n                        {emploi.email_employeur}\r\n                      </a>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {showDetails && selectedEmploi === emploi && (\r\n                <div className=\"details-popup\">\r\n                  <div className=\"details-popup-content\">\r\n                    <span\r\n                      className=\"close\"\r\n                      onClick={() => setShowDetails(false)}\r\n                    >\r\n                      &times;\r\n                    </span>\r\n                    <div className=\"details-content\">\r\n                      <h4>Description:</h4>\r\n                      <p>{emploi.description}</p>\r\n                      <h4>Responsabilités:</h4>\r\n                      <p>{emploi.responsabilites}</p>\r\n                      <h4>Exigences:</h4>\r\n                      <p>{emploi.exigences}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <li>Aucune offre d'emploi trouvée.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmploiItem;\r\n*/\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\r\nimport \"./EmploiItem.css\";\r\n\r\nconst EmploiItem = ({ searchTerm, location, likedJobs, setLikedJobs, entrepriseToken }) => {\r\n  const [showEmail, setShowEmail] = useState(false);\r\n  const [selectedEmploi, setSelectedEmploi] = useState(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [emplois, setEmplois] = useState([]); // State to store the fetched emplois\r\n  const [loading, setLoading] = useState(true); // To show loading state while fetching\r\n\r\n  // Toggle email visibility\r\n  const toggleEmail = (emploi) => {\r\n    if (selectedEmploi === emploi) {\r\n      setShowEmail(!showEmail);\r\n    } else {\r\n      setSelectedEmploi(emploi);\r\n      setShowEmail(true);\r\n    }\r\n  };\r\n\r\n  // Toggle details visibility\r\n  const toggleDetails = (emploi) => {\r\n    if (selectedEmploi === emploi) {\r\n      setShowDetails(!showDetails);\r\n    } else {\r\n      setSelectedEmploi(emploi);\r\n      setShowDetails(true);\r\n    }\r\n  };\r\n\r\n  // Fetch the emplois data from the server\r\n  const fetchEmplois = async () => {\r\n    if (!entrepriseToken) {\r\n      console.error(\"No token provided!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/api/offreEmploi', {\r\n        headers: {\r\n          'Authorization': `Bearer ${entrepriseToken}` // Make sure the token is included in the request\r\n        }\r\n      });\r\n      \r\n      const json = await response.json();\r\n\r\n      if (response.ok) {\r\n        setEmplois(json); // Set the fetched emplois data\r\n      } else {\r\n        console.error(\"Failed to fetch emplois:\", json);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching emplois:\", error);\r\n    } finally {\r\n      setLoading(false); // Stop the loading state after fetching\r\n    }\r\n  };\r\n\r\n  // Filter emplois based on search term and location\r\n  const filterEmplois = (emplois) => {\r\n    const lowerSearchTerm = searchTerm.toLowerCase();\r\n    const lowerLocation = location.toLowerCase();\r\n\r\n    return emplois.filter(\r\n      (emploi) =>\r\n        emploi.visibility &&\r\n        (emploi.nom_poste.toLowerCase().includes(lowerSearchTerm) ||\r\n          emploi.nom_entreprise.toLowerCase().includes(lowerSearchTerm) ||\r\n          emploi.categorie.toLowerCase().includes(lowerSearchTerm) ||\r\n          (emploi.description &&\r\n            emploi.description.toLowerCase().includes(lowerSearchTerm))) &&\r\n        (location === \"\" ||\r\n          emploi.emplacement.toLowerCase().includes(lowerLocation))\r\n    );\r\n  };\r\n\r\n  // Trigger fetch when the component mounts\r\n  useEffect(() => {\r\n    fetchEmplois();\r\n  }, [entrepriseToken]); // Dependency on entrepriseToken so it refetches when token changes\r\n\r\n  const groupedEmplois = filterEmplois(emplois);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div>Loading...</div> // Loading state\r\n      ) : (\r\n        <ul className=\"lmj-emploi-list\">\r\n          {groupedEmplois.length > 0 ? (\r\n            groupedEmplois.map((emploi) => (\r\n              <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n                {/* Like button */}\r\n                <div\r\n                  className=\"like-icon\"\r\n                  onClick={() => {\r\n                    const newLikes = new Set(likedJobs);\r\n                    if (newLikes.has(emploi.nom_poste)) {\r\n                      newLikes.delete(emploi.nom_poste);\r\n                    } else {\r\n                      newLikes.add(emploi.nom_poste);\r\n                    }\r\n                    setLikedJobs(newLikes);\r\n                  }}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  {likedJobs.has(emploi.nom_poste) ? (\r\n                    <FaHeart color=\"black\" />\r\n                  ) : (\r\n                    <FaRegHeart color=\"black\" />\r\n                  )}\r\n                </div>\r\n\r\n                {/* Job Title */}\r\n                <h3\r\n                  className=\"jobTitle\"\r\n                  onClick={() => toggleDetails(emploi)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  {emploi.nom_poste}\r\n                </h3>\r\n                <span className=\"jobEntreprise\">\r\n                  <span className=\"label\">Entreprise:</span> {emploi.nom_entreprise}\r\n                </span>\r\n                <span className=\"jobSector\">\r\n                  <span className=\"label\">Secteur:</span> {emploi.categorie}\r\n                </span>\r\n                <span className=\"jobSalary\">\r\n                  <span className=\"label\">Salaire:</span> {emploi.salaire}\r\n                </span>\r\n                <span className=\"jobLocation\">\r\n                  <span className=\"label\">Emplacement:</span> {emploi.emplacement}\r\n                </span>\r\n                <button className=\"buttonP\" onClick={() => toggleEmail(emploi)}>\r\n                  Postuler\r\n                </button>\r\n\r\n                {/* Email Popup */}\r\n                {showEmail && selectedEmploi === emploi && (\r\n                  <div className=\"popup\">\r\n                    <div className=\"popup-content\">\r\n                      <span className=\"close\" onClick={() => setShowEmail(false)}>\r\n                        &times;\r\n                      </span>\r\n                      <h4>\r\n                        Email:{\" \"}\r\n                        <a href={`mailto:${emploi.email_employeur}`}>\r\n                          {emploi.email_employeur}\r\n                        </a>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Job Details Popup */}\r\n                {showDetails && selectedEmploi === emploi && (\r\n                  <div className=\"details-popup\">\r\n                    <div className=\"details-popup-content\">\r\n                      <span className=\"close\" onClick={() => setShowDetails(false)}>\r\n                        &times;\r\n                      </span>\r\n                      <div className=\"details-content\">\r\n                        <h4>Description:</h4>\r\n                        <p>{emploi.description}</p>\r\n                        <h4>Responsabilités:</h4>\r\n                        <p>{emploi.responsabilites}</p>\r\n                        <h4>Exigences:</h4>\r\n                        <p>{emploi.exigences}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <li>Aucune offre d'emploi trouvée.</li>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmploiItem;\r\n\r\n"],"mappingslD,SAASC,OAAO,EAAEC,UAAU,QAAQ,gBAAgB;AACpD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMuB,WAAW,GAAIC,MAAM,IAAK;IAC9B,IAAIT,cAAc,KAAKS,MAAM,EAAE;MAC7BV,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B,CAAC,MAAM;MACLG,iBAAiB,CAACQ,MAAM,CAAC;MACzBV,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMW,aAAa,GAAID,MAAM,IAAK;IAChC,IAAIT,cAAc,KAAKS,MAAM,EAAE;MAC7BN,cAAc,CAAC,CAACD,WAAW,CAAC;IAC9B,CAAC,MAAM;MACLD,iBAAiB,CAACQ,MAAM,CAAC;MACzBN,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACf,eAAe,EAAE;MACpBgB,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACnC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC/CC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUpB,eAAe,EAAE,CAAC;QAC/C;MACF,CAAC,CAAC;MAEF,MAAMqB,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfb,UAAU,CAACY,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC,MAAM;QACLL,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEI,IAAI,CAAC;MACjD;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMY,aAAa,GAAIf,OAAO,IAAK;IACjC,MAAMgB,eAAe,GAAG5B,UAAU,CAAC6B,WAAW,CAAC,CAAC;IAChD,MAAMC,aAAa,GAAG7B,QAAQ,CAAC4B,WAAW,CAAC,CAAC;IAE5C,OAAOjB,OAAO,CAACmB,MAAM,CAClBd,MAAM,IACLA,MAAM,CAACe,UAAU,KAChBf,MAAM,CAACgB,SAAS,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,eAAe,CAAC,IACvDX,MAAM,CAACkB,cAAc,CAACN,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,eAAe,CAAC,IAC7DX,MAAM,CAACmB,SAAS,CAACP,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,eAAe,CAAC,IACvDX,MAAM,CAACoB,WAAW,IACjBpB,MAAM,CAACoB,WAAW,CAACR,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,eAAe,CAAE,CAAC,KAC/D3B,QAAQ,KAAK,EAAE,IACdgB,MAAM,CAACqB,WAAW,CAACT,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACJ,aAAa,CAAC,CAC9D,CAAC;EACH,CAAC;;EAED;EACApC,SAAS,CAAC,MAAM;IACdyB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEvB,MAAMmC,cAAc,GAAGZ,aAAa,CAACf,OAAO,CAAC;EAE7C,oBACEd,OAAA;IAAA0C,QAAA,EACG1B,OAAO,gBACNhB,OAAA;MAAA0C,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC;IAAA,eAEtB9C,OAAA;MAAI+C,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC5BD,cAAc,CAACO,MAAM,GAAG,CAAC,GACxBP,cAAc,CAACQ,GAAG,CAAE9B,MAAM,iBACxBnB,OAAA;QAAK+C,SAAS,EAAC,kBAAkB;QAAAL,QAAA,gBAE/B1C,OAAA;UACE+C,SAAS,EAAC,WAAW;UACrBG,OAAO,EAAEA,CAAA,KAAM;YACb,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAChD,SAAS,CAAC;YACnC,IAAI+C,QAAQ,CAACE,GAAG,CAAClC,MAAM,CAACgB,SAAS,CAAC,EAAE;cAClCgB,QAAQ,CAACG,MAAM,CAACnC,MAAM,CAACgB,SAAS,CAAC;YACnC,CAAC,MAAM;cACLgB,QAAQ,CAACI,GAAG,CAACpC,MAAM,CAACgB,SAAS,CAAC;YAChC;YACA9B,YAAY,CAAC8C,QAAQ,CAAC;UACxB,CAAE;UACFK,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAU,CAAE;UAAAf,QAAA,EAE5BtC,SAAS,CAACiD,GAAG,CAAClC,MAAM,CAACgB,SAAS,CAAC,gBAC9BnC,OAAA,CAACH,OAAO;YAAC6D,KAAK,EAAC;UAAO;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEzB9C,OAAA,CAACF,UAAU;YAAC4D,KAAK,EAAC;UAAO;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC5B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGN9C,OAAA;UACE+C,SAAS,EAAC,UAAU;UACpBG,OAAO,EAAEA,CAAA,KAAM9B,aAAa,CAACD,MAAM,CAAE;UACrCqC,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAU,CAAE;UAAAf,QAAA,EAE5BvB,MAAM,CAACgB;QAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACL9C,OAAA;UAAM+C,SAAS,EAAC,eAAe;UAAAL,QAAA,gBAC7B1C,OAAA;YAAM+C,SAAS,EAAC,OAAO;YAAAL,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAAC3B,MAAM,CAACkB,cAAc;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACP9C,OAAA;UAAM+C,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACzB1C,OAAA;YAAM+C,SAAS,EAAC,OAAO;YAAAL,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAAC3B,MAAM,CAACmB,SAAS;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC,eACP9C,OAAA;UAAM+C,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACzB1C,OAAA;YAAM+C,SAAS,EAAC,OAAO;YAAAL,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAAC3B,MAAM,CAACwC,OAAO;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACP9C,OAAA;UAAM+C,SAAS,EAAC,aAAa;UAAAL,QAAA,gBAC3B1C,OAAA;YAAM+C,SAAS,EAAC,OAAO;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,EAAC3B,MAAM,CAACqB,WAAW;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eACP9C,OAAA;UAAQ+C,SAAS,EAAC,SAAS;UAACG,OAAO,EAAEA,CAAA,KAAMhC,WAAW,CAACC,MAAM,CAAE;UAAAuB,QAAA,EAAC;QAEhE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAGRtC,SAAS,IAAIE,cAAc,KAAKS,MAAM,iBACrCnB,OAAA;UAAK+C,SAAS,EAAC,OAAO;UAAAL,QAAA,eACpB1C,OAAA;YAAK+C,SAAS,EAAC,eAAe;YAAAL,QAAA,gBAC5B1C,OAAA;cAAM+C,SAAS,EAAC,OAAO;cAACG,OAAO,EAAEA,CAAA,KAAMzC,YAAY,CAAC,KAAK,CAAE;cAAAiC,QAAA,EAAC;YAE5D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACP9C,OAAA;cAAA0C,QAAA,GAAI,QACI,EAAC,GAAG,eACV1C,OAAA;gBAAG4D,IAAI,EAAE,UAAUzC,MAAM,CAAC0C,eAAe,EAAG;gBAAAnB,QAAA,EACzCvB,MAAM,CAAC0C;cAAe;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGAlC,WAAW,IAAIF,cAAc,KAAKS,MAAM,iBACvCnB,OAAA;UAAK+C,SAAS,EAAC,eAAe;UAAAL,QAAA,eAC5B1C,OAAA;YAAK+C,SAAS,EAAC,uBAAuB;YAAAL,QAAA,gBACpC1C,OAAA;cAAM+C,SAAS,EAAC,OAAO;cAACG,OAAO,EAAEA,CAAA,KAAMrC,cAAc,CAAC,KAAK,CAAE;cAAA6B,QAAA,EAAC;YAE9D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACP9C,OAAA;cAAK+C,SAAS,EAAC,iBAAiB;cAAAL,QAAA,gBAC9B1C,OAAA;gBAAA0C,QAAA,EAAI;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrB9C,OAAA;gBAAA0C,QAAA,EAAIvB,MAAM,CAACoB;cAAW;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3B9C,OAAA;gBAAA0C,QAAA,EAAI;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzB9C,OAAA;gBAAA0C,QAAA,EAAIvB,MAAM,CAAC2C;cAAe;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/B9C,OAAA;gBAAA0C,QAAA,EAAI;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnB9C,OAAA;gBAAA0C,QAAA,EAAIvB,MAAM,CAAC4C;cAAS;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA,GAhFoC3B,MAAM,CAACgB,SAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiFlD,CACN,CAAC,gBAEF9C,OAAA;QAAA0C,QAAA,EAAI;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvC,EAAA,CAlLIN,UAAU;AAAA+D,EAAA,GAAV/D,UAAU;AAoLhB,eAAeA,UAAU;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}