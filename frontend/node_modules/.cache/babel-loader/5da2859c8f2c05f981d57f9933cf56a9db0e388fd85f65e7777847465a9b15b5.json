{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lina\\\\JobBangFINFOREAL\\\\jobbanglinainesFIN-master\\\\frontend\\\\src\\\\components\\\\MesAnnonces\\\\MesAnnonces.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport EmploiDetails from \"./EmploiDetails\";\nimport \"./MesAnnonces.css\";\nimport OffreEmploi from \"../OffreEmploi/OffreEmploi\";\nimport { useEmploiContext } from \"../../hooks/useEmploiContext\";\nimport { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MesAnnonces = ({\n  connectedEmployerEmail\n}) => {\n  _s();\n  const {\n    emplois,\n    dispatch\n  } = useEmploiContext();\n  const {\n    entreprise\n  } = useEntrepriseContext();\n  const filteredEmploiList = emplois ? emplois.filter(emploi => emploi.email_employeur === connectedEmployerEmail) : [];\n\n  // Ajoute un log pour voir les emplois filtrés\n  console.log('emplois filtrés:', filteredEmploiList);\n\n  // fetch tout les emploi et supprimer et modifier potentiellement\n  useEffect(() => {\n    const fetchEmploi = async () => {\n      const response = await fetch('/api/offreEmploi', {\n        headers: {\n          'Authorization': `Bearer ${entreprise.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_EMPLOIS',\n          payload: json\n        });\n      }\n    };\n    if (entreprise) {\n      fetchEmploi();\n    }\n  }, [dispatch, entreprise]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lmj-emploi-list\",\n      children: emplois && emplois.map(emploi => /*#__PURE__*/_jsxDEV(EmploiDetails, {\n        emploi: emploi\n      }, emploi._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(OffreEmploi, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n/*\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n      {emplois && emplois.map((emploi) =>(\r\n      <EmploiDetails key ={emploi._id} emploi={emploi} />\r\n      ))}\r\n\r\n\r\n        {filteredEmploiList.length > 0 ? (\r\n          filteredEmploiList.map((emploi) => (\r\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n              <h3 className=\"jobTitle\">{emploi.nom_poste}</h3>\r\n              <span className=\"jobEntreprise\">{emploi.nom_entreprise}</span>\r\n              <span className=\"jobSector\">{emploi.categorie}</span>\r\n              <span className=\"jobSalary\">{emploi.salaire}</span>\r\n              <span className=\"jobLocation\">{emploi.emplacement}</span>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"buttonx\"\r\n                  onClick={() => handleDelete(emploi)}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <li>Aucune offre d'emploi disponible.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n*/\n_s(MesAnnonces, \"QPf1WPUyrpHxyz1NGPIQzTfz8WA=\", false, function () {\n  return [useEmploiContext, useEntrepriseContext];\n});\n_c = MesAnnonces;\nexport default MesAnnonces;\nvar _c;\n$RefreshReg$(_c, \"MesAnnonces\");","map":{"version":3,"names":["React","useEffect","EmploiDetails","OffreEmploi","useEmploiContext","useEntrepriseContext","jsxDEV","_jsxDEV","MesAnnonces","connectedEmployerEmail","_s","emplois","dispatch","entreprise","filteredEmploiList","filter","emploi","email_employeur","console","log","fetchEmploi","response","fetch","headers","token","json","ok","type","payload","children","className","map","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lina/JobBangFINFOREAL/jobbanglinainesFIN-master/frontend/src/components/MesAnnonces/MesAnnonces.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport EmploiDetails from \"./EmploiDetails\"\r\nimport \"./MesAnnonces.css\";\r\nimport OffreEmploi from \"../OffreEmploi/OffreEmploi\";\r\nimport { useEmploiContext } from \"../../hooks/useEmploiContext\";\r\nimport { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\r\n\r\nconst MesAnnonces = ({ connectedEmployerEmail }) => {\r\n  const { emplois, dispatch } = useEmploiContext();\r\n  const { entreprise } = useEntrepriseContext();\r\n  const filteredEmploiList = emplois ? emplois.filter(\r\n      (emploi) => emploi.email_employeur === connectedEmployerEmail\r\n  ) : [];\r\n\r\n  // Ajoute un log pour voir les emplois filtrés\r\n  console.log('emplois filtrés:', filteredEmploiList);\r\n\r\n  // fetch tout les emploi et supprimer et modifier potentiellement\r\n  useEffect(() => {\r\n      const fetchEmploi = async () => {\r\n          const response = await fetch('/api/offreEmploi', {\r\n              headers: {\r\n                  'Authorization': `Bearer ${entreprise.token}`\r\n              }\r\n          });\r\n          const json = await response.json();\r\n\r\n          if (response.ok) {\r\n              dispatch({ type: 'SET_EMPLOIS', payload: json });\r\n          }\r\n      };\r\n\r\n      if (entreprise) {\r\n          fetchEmploi();\r\n      }\r\n  }, [dispatch, entreprise]);\r\n\r\n  return (\r\n      <div>\r\n          <ul className=\"lmj-emploi-list\">\r\n              {emplois && emplois.map((emploi) => (\r\n                  <EmploiDetails key={emploi._id} emploi={emploi} />\r\n              ))}\r\n          </ul>\r\n          <OffreEmploi />\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\n/*\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"lmj-emploi-list\">\r\n      {emplois && emplois.map((emploi) =>(\r\n      <EmploiDetails key ={emploi._id} emploi={emploi} />\r\n      ))}\r\n\r\n\r\n        {filteredEmploiList.length > 0 ? (\r\n          filteredEmploiList.map((emploi) => (\r\n            <div className=\"emploi-container\" key={emploi.nom_poste}>\r\n              <h3 className=\"jobTitle\">{emploi.nom_poste}</h3>\r\n              <span className=\"jobEntreprise\">{emploi.nom_entreprise}</span>\r\n              <span className=\"jobSector\">{emploi.categorie}</span>\r\n              <span className=\"jobSalary\">{emploi.salaire}</span>\r\n              <span className=\"jobLocation\">{emploi.emplacement}</span>\r\n              <div className=\"button-container\">\r\n                <button\r\n                  className=\"buttonx\"\r\n                  onClick={() => handleDelete(emploi)}\r\n                >\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <li>Aucune offre d'emploi disponible.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n*/\r\n\r\nexport default MesAnnonces;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,oBAAoB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGR,gBAAgB,CAAC,CAAC;EAChD,MAAM;IAAES;EAAW,CAAC,GAAGR,oBAAoB,CAAC,CAAC;EAC7C,MAAMS,kBAAkB,GAAGH,OAAO,GAAGA,OAAO,CAACI,MAAM,CAC9CC,MAAM,IAAKA,MAAM,CAACC,eAAe,KAAKR,sBAC3C,CAAC,GAAG,EAAE;;EAEN;EACAS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,kBAAkB,CAAC;;EAEnD;EACAb,SAAS,CAAC,MAAM;IACZ,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QAC7CC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUV,UAAU,CAACW,KAAK;QAC/C;MACJ,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;MAElC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACbd,QAAQ,CAAC;UAAEe,IAAI,EAAE,aAAa;UAAEC,OAAO,EAAEH;QAAK,CAAC,CAAC;MACpD;IACJ,CAAC;IAED,IAAIZ,UAAU,EAAE;MACZO,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACR,QAAQ,EAAEC,UAAU,CAAC,CAAC;EAE1B,oBACIN,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAIuB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC1BlB,OAAO,IAAIA,OAAO,CAACoB,GAAG,CAAEf,MAAM,iBAC3BT,OAAA,CAACL,aAAa;QAAkBc,MAAM,EAAEA;MAAO,GAA3BA,MAAM,CAACgB,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACL7B,OAAA,CAACJ,WAAW;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEZ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA1B,EAAA,CA3CMF,WAAW;EAAA,QACeJ,gBAAgB,EACvBC,oBAAoB;AAAA;AAAAgC,EAAA,GAFvC7B,WAAW;AAgFjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}