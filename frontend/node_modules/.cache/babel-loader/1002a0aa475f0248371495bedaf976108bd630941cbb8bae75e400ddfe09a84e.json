{"ast":null,"code":"import React,{useState}from\"react\";import\"./ConnexionEnt.css\";import NavBar from'../NavBar/NavBar';import{useNavigate}from'react-router-dom';// Pour naviguer après la connexion\nimport{EmployersList}from'../../data/employers';// Assurez-vous que le chemin est correct\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ConnexionEnt(){const[userType]=useState(\"Employeur\");const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");// État pour le message d'erreur\nconst navigate=useNavigate();// Pour rediriger après la connexion réussie\nconst handleSubmit=e=>{e.preventDefault();// Vérifiez si l'email est dans la liste des employeurs\nconst employer=EmployersList.find(emp=>emp.email===email&&emp.password===password);if(employer){console.log(`Logging in as ${userType} with email: ${email}`);// Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\nnavigate('/ent',{state:{connectedEmployerEmail:email}});// Passe l'email ici\n}else{setErrorMessage(\"Email ou mot de passe incorrect.\");// Définir le message d'erreur\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"connexion-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Connexion\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Employeur\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true,placeholder:\"Entrez votre email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Mot de passe\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,placeholder:\"Entrez votre mot de passe\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"login-btn\",type:\"submit\",children:\"Se connecter\"}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errorMessage}),\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signup\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Pas de compte avec nous ?\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"a\",{href:\"./inscent\",children:/*#__PURE__*/_jsx(\"button\",{className:\"signup-btn\",children:\"Cr\\xE9er un compte\"})})]})]})]});}export default ConnexionEnt;","map":{"version":3,"names":["React","useState","NavBar","useNavigate","EmployersList","jsx","_jsx","jsxs","_jsxs","ConnexionEnt","userType","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","employer","find","emp","console","log","state","connectedEmployerEmail","children","className","onSubmit","type","value","onChange","target","required","placeholder","href"],"sources":["C:/Users/Ines/Downloads/jobbanglinainesFIN/src/components/ConnexionEnt/ConnexionEnt.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ConnexionEnt.css\";\r\nimport NavBar from '../NavBar/NavBar';\r\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la connexion\r\nimport { EmployersList } from '../../data/employers'; // Assurez-vous que le chemin est correct\r\n\r\nfunction ConnexionEnt() {\r\n  const [userType] = useState(\"Employeur\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\r\n  const navigate = useNavigate(); // Pour rediriger après la connexion réussie\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Vérifiez si l'email est dans la liste des employeurs\r\n    const employer = EmployersList.find(emp => emp.email === email && emp.password === password);\r\n  \r\n    if (employer) {\r\n      console.log(`Logging in as ${userType} with email: ${email}`);\r\n      // Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\r\n      navigate('/ent', { state: { connectedEmployerEmail: email } }); // Passe l'email ici\r\n    } else {\r\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"connexion-container\">\r\n        <h2>Connexion</h2>\r\n        <p>Employeur</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre email\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              placeholder=\"Entrez votre mot de passe\"\r\n            />\r\n          </div>\r\n          <button className=\"login-btn\"type=\"submit\">Se connecter</button>\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */}\r\n        </form>\r\n        \r\n        <div className=\"signup\">\r\n          <p>Pas de compte avec nous ?</p>\r\n          <br />\r\n          <a href=\"./inscent\">\r\n            <button className=\"signup-btn\">Créer un compte</button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnexionEnt;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}