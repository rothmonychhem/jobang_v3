{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ines\\\\React\\\\jobbanglinainesFIN-main\\\\frontend\\\\src\\\\components\\\\ConnexionEnt\\\\ConnexionEnt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ConnexionEnt.css\";\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la connexion\n//import { EmployersList } from '../../data/employers'; //// Assurez-vous que le chemin est correct\nimport { useConnexionEntreprise } from \"../../hooks/useConnexionEntreprise\";\n\n//import { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnexionEnt = () => {\n  _s();\n  // const {dispatch} = useEntrepriseContext()\n  const navigate = useNavigate();\n  const [emailEntreprise, setEmailEntreprise] = useState('');\n  const [mot_de_passeEntreprise, setMDPentreprise] = useState('');\n  const {\n    connexionEnt,\n    error,\n    isLoading\n  } = useConnexionEntreprise();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const success = await connexionEnt(emailEntreprise, mot_de_passeEntreprise);\n    if (success) {\n      // Redirige l'utilisateur vers la page appropriée après une connexion réussie\n      navigate('/ent'); // Remplace '/ent' par la route vers laquelle tu veux rediriger l'utilisateur\n    }\n\n    /*\n    const entreprise = {\n      emailEntreprise:emailEntreprise,\n      mot_de_passeEntreprise:mot_de_passeEntreprise\n    \n    }\n    */\n    /*\n    const response = await fetch('/api/entreprise/', {\n      method:'POST',\n      body: JSON.stringify(entreprise),\n      headers:{\n          'Content-Type': 'application/json'\n      }\n    })\n    const json = await response.json()\n    \n    if(!response.ok){\n          setError(json.error)\n          \n    }\n    if(response.ok){\n      setEmailEntreprise('')\n      setMDPentreprise('')\n      setError(null)\n      console.log('compte entreprise connecter mon amour')\n      dispatch({type: 'LOGINENTREPRISE', payload:json})\n    }\n    */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connexion-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Employeur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: emailEntreprise,\n            onChange: e => setEmailEntreprise(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: mot_de_passeEntreprise,\n            onChange: e => setMDPentreprise(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pas de compte avec nous ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./inscent\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: isLoading,\n            className: \"signup-btn\",\n            children: \"Cr\\xE9er un compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnexionEnt, \"XgCWOkF4ULJHFLq24e0I0V95TbI=\", false, function () {\n  return [useNavigate, useConnexionEntreprise];\n});\n_c = ConnexionEnt;\nexport default ConnexionEnt;\n\n/*\n\n\n\nfunction ConnexionEnt() {\n  const [userType] = useState(\"Employeur\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\n  const navigate = useNavigate(); // Pour rediriger après la connexion réussie\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Vérifiez si l'email est dans la liste des employeurs\n    const employer = EmployersList.find(emp => emp.email === email && emp.password === password);\n  \n    if (employer) {\n      console.log(`Logging in as ${userType} with email: ${email}`);\n      // Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\n      navigate('/ent', { state: { connectedEmployerEmail: email } }); // Passe l'email ici\n    } else {\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\n    }\n  };\n  \n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"connexion-container\">\n        <h2>Connexion</h2>\n        <p>Employeur</p>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              placeholder=\"Entrez votre email\"\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Mot de passe</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              placeholder=\"Entrez votre mot de passe\"\n            />\n          </div>\n          <button className=\"login-btn\"type=\"submit\">Se connecter</button>\n   */ /*\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */\n/*\n   </form>\n   \n  <div className=\"signup\">\n    <p>Pas de compte avec nous ?</p>\n    <br />\n    <a href=\"./inscent\">\n      <button className=\"signup-btn\">Créer un compte</button>\n    </a>\n  </div>\n</div>\n</div>\n);\n}\nexport default ConnexionEnt;\n***/\nvar _c;\n$RefreshReg$(_c, \"ConnexionEnt\");","map":{"version":3,"names":["React","useState","NavBar","useNavigate","useConnexionEntreprise","jsxDEV","_jsxDEV","ConnexionEnt","_s","navigate","emailEntreprise","setEmailEntreprise","mot_de_passeEntreprise","setMDPentreprise","connexionEnt","error","isLoading","handleSubmit","e","preventDefault","success","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","required","href","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Ines/React/jobbanglinainesFIN-main/frontend/src/components/ConnexionEnt/ConnexionEnt.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ConnexionEnt.css\";\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la connexion\n//import { EmployersList } from '../../data/employers'; //// Assurez-vous que le chemin est correct\nimport { useConnexionEntreprise } from \"../../hooks/useConnexionEntreprise\";\n\n//import { useEntrepriseContext } from \"../../hooks/useEntrepriseContext\";\n\n\nconst ConnexionEnt = () => {\n // const {dispatch} = useEntrepriseContext()\n  const navigate = useNavigate();\n  const [emailEntreprise, setEmailEntreprise]= useState('')\n  const [mot_de_passeEntreprise,setMDPentreprise]= useState('')\n  const {connexionEnt, error, isLoading} = useConnexionEntreprise()\n\n \n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const success = await connexionEnt(emailEntreprise, mot_de_passeEntreprise);    if (success) {\n      // Redirige l'utilisateur vers la page appropriée après une connexion réussie\n      navigate('/ent'); // Remplace '/ent' par la route vers laquelle tu veux rediriger l'utilisateur\n    }\n\n/*\nconst entreprise = {\n  emailEntreprise:emailEntreprise,\n  mot_de_passeEntreprise:mot_de_passeEntreprise\n\n}\n*/\n/*\nconst response = await fetch('/api/entreprise/', {\n  method:'POST',\n  body: JSON.stringify(entreprise),\n  headers:{\n      'Content-Type': 'application/json'\n  }\n})\nconst json = await response.json()\n\nif(!response.ok){\n      setError(json.error)\n      \n}\nif(response.ok){\n  setEmailEntreprise('')\n  setMDPentreprise('')\n  setError(null)\n  console.log('compte entreprise connecter mon amour')\n  dispatch({type: 'LOGINENTREPRISE', payload:json})\n}\n*/\n}\n\n\n  return (\n\n    <div>\n      <NavBar />\n      <div className=\"connexion-container\">\n        <h2>Connexion</h2>\n        <p>Employeur</p>\n        <form onSubmit={handleSubmit}>\n\n         \n          <div className=\"input-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              value={emailEntreprise}\n              onChange={(e) => setEmailEntreprise(e.target.value)}\n              required\n            />\n          </div>\n      \n          <div className=\"input-group\">\n            <label>Mot de passe</label>\n            <input\n              type=\"password\"\n              value={mot_de_passeEntreprise}\n              onChange={(e) => setMDPentreprise(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"submit-btn\">Se connecter</button>\n        </form>\n\n        <div className=\"signup\">\n          <p>Pas de compte avec nous ?</p>\n          <br />\n          <a href=\"./inscent\">\n            <button disabled={isLoading} className=\"signup-btn\">Créer un compte</button>\n            {error && <div>{error}</div>}\n          </a>\n        </div>\n\n      </div>\n    </div>\n\n  )\n}\n\nexport default ConnexionEnt;\n\n\n\n\n\n\n/*\n\n\n\nfunction ConnexionEnt() {\n  const [userType] = useState(\"Employeur\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // État pour le message d'erreur\n  const navigate = useNavigate(); // Pour rediriger après la connexion réussie\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Vérifiez si l'email est dans la liste des employeurs\n    const employer = EmployersList.find(emp => emp.email === email && emp.password === password);\n  \n    if (employer) {\n      console.log(`Logging in as ${userType} with email: ${email}`);\n      // Si l'authentification est réussie, rediriger vers la page entreprise avec l'email\n      navigate('/ent', { state: { connectedEmployerEmail: email } }); // Passe l'email ici\n    } else {\n      setErrorMessage(\"Email ou mot de passe incorrect.\"); // Définir le message d'erreur\n    }\n  };\n  \n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"connexion-container\">\n        <h2>Connexion</h2>\n        <p>Employeur</p>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              placeholder=\"Entrez votre email\"\n            />\n          </div>\n          <div className=\"input-group\">\n            <label>Mot de passe</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              placeholder=\"Entrez votre mot de passe\"\n            />\n          </div>\n          <button className=\"login-btn\"type=\"submit\">Se connecter</button>\n   *//*\n         {errorMessage && <div className=\"error-message\">{errorMessage}</div>} {/* Afficher le message d'erreur */\n      /*\n         </form>\n\n        \n        <div className=\"signup\">\n          <p>Pas de compte avec nous ?</p>\n          <br />\n          <a href=\"./inscent\">\n            <button className=\"signup-btn\">Créer un compte</button>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ConnexionEnt;\n***/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}