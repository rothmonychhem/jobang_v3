{"ast":null,"code":"import React,{useState}from\"react\";import\"./Inscription.css\";import NavBar from'../NavBar/NavBar';import{useNavigate}from'react-router-dom';// Pour naviguer après la soumission\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Inscription(){const[userType]=useState(\"candidat\");const[name,setName]=useState(\"\");const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[error,setError]=useState(\"\");const navigate=useNavigate();// Pour rediriger vers la page candidat\nconst handleSubmit=e=>{e.preventDefault();if(password!==confirmPassword){setError(\"*Les mots de passe ne correspondent pas. Veuillez réessayer.\");return;}setError(\"\");console.log(`Registering as ${userType} with name: ${name}, email: ${email}`);navigate('/cand');// Rediriger après l'inscription réussie\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"inscription-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Inscription\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Candidat\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nom\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:e=>setName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Mot de passe\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Confirmer le mot de passe\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-btn\",children:\"S'inscrire\"})]})]})]});}export default Inscription;","map":{"version":3,"names":["React","useState","NavBar","useNavigate","jsx","_jsx","jsxs","_jsxs","Inscription","userType","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleSubmit","e","preventDefault","console","log","children","className","onSubmit","type","value","onChange","target","required"],"sources":["C:/Users/Ines/Downloads/jobbanglinainesFIN/src/components/Inscription/Inscription.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Inscription.css\";\r\nimport NavBar from '../NavBar/NavBar';\r\nimport { useNavigate } from 'react-router-dom'; // Pour naviguer après la soumission\r\n\r\nfunction Inscription() {\r\n  const [userType] = useState(\"candidat\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate(); // Pour rediriger vers la page candidat\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setError(\"*Les mots de passe ne correspondent pas. Veuillez réessayer.\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    console.log(`Registering as ${userType} with name: ${name}, email: ${email}`);\r\n    navigate('/cand'); // Rediriger après l'inscription réussie\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"inscription-container\">\r\n        <h2>Inscription</h2>\r\n        <p>Candidat</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-group\">\r\n            <label>Nom</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Confirmer le mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-btn\">S'inscrire</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inscription;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}